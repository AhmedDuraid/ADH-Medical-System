@page "/Feedback"

@using Models.Feedback

@inject IFeedbackAccess _IFeedbackAccess


<h3>PublicFeedback</h3>
<EditForm Model="@feedbackModel" OnValidSubmit="SendFeedback">

    <FluentValidationValidator />
    <div class="form-group">
        <label for="TitelInput">Titel</label>
        <input @bind-value="@feedbackModel.Titel"
               @bind-value:event="oninput"
               id="TitelInput"
               class="form-control"
               placeholder="Titel"
               type="text"
               disabled="@disabledInput" />
        <ValidationMessage For="@(()=>feedbackModel.Titel)" />
    </div>

    <div class="form-group">
        <label for="NameInput">Name</label>
        <input @bind-value="@feedbackModel.Name"
               @bind-value:event="oninput"
               id="NamelInput"
               class="form-control"
               placeholder="Name"
               type="text"
               disabled="@disabledInput" />
        <ValidationMessage For="@(()=>feedbackModel.Name)" />

    </div>

    <div class="form-group">
        <label for="EmailInput">Email</label>
        <input @bind-value="@feedbackModel.Email"
               @bind-value:event="oninput"
               id="EmailInput"
               class="form-control"
               placeholder="Email"
               type="email"
               disabled="@disabledInput" />
        <ValidationMessage For="@(()=>feedbackModel.Email)" />

    </div>

    <div class="form-group">
        <label for="PhoneInput">Phone</label>
        <input @bind-value="@feedbackModel.Phone"
               @bind-value:event="oninput"
               id="PhoneInput"
               class="form-control"
               placeholder="Phone"
               type="text"
               disabled="@disabledInput" />
        <ValidationMessage For="@(()=>feedbackModel.Phone)" />

    </div>

    <div class="form-group">
        <label for="FeedbackBodyInput">Problem</label>
        <textarea @bind-value="@feedbackModel.FeedbackBody"
                  @bind-value:event="oninput"
                  id="FeedbackBodyInput"
                  class="form-control"
                  placeholder="Describe your Problem"
                  disabled="@disabledInput" />
        <ValidationMessage For="@(()=>feedbackModel.FeedbackBody)" />

    </div>
    <button disabled="@disabledInput" class="btn btn-primary" type="submit">Submit</button>
</EditForm>
@if (httpInfo.StatusCode == System.Net.HttpStatusCode.OK)
{
    <div class="alert alert-primary">
        Thank you for your feedback, we will check your review and will contact you if we need more information
    </div>
}

@if (error)
{
    <div class="alert alert-warning">
        State Code : @httpInfo.StatusCode, Message: @httpInfo.Message
    </div>
}


@code {

    private FeedbackModel feedbackModel = new FeedbackModel();
    private HttpInfoModel httpInfo = new HttpInfoModel();
    private bool disabledInput = false;
    private bool error = false;


    private async void SendFeedback()
    {
        disabledInput = true;
        httpInfo = await _IFeedbackAccess.SendNewFeedbakc(feedbackModel);

        if (httpInfo.StatusCode != System.Net.HttpStatusCode.OK)
        {
            error = true;
            disabledInput = false;
        }
        StateHasChanged();
    }

}
