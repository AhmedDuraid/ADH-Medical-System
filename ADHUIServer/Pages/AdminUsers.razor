@page "/admin/users"

@using UIDataAccess.Library.Models.Admin
@using UIDataAccess.Library.DataAccess.Admin
@using UIDataAccess.Library.Models

@inject IUsersDataAccess IUsersDataAccess
@inject Blazored.SessionStorage.ISessionStorageService ISessionStorageService

<h3>AdminUsers</h3>

<AuthorizeView Roles="Admin">
    <Authorized>
        @if (loading)
        {
            <ADHUIServer.Components.Spinner />

        }
        else
        {
            @if (UsersList != null)
            {
                <table class="table table-striped table-hover table-sm table-responsive">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col">Id</th>
                            <th scope="col">UserName</th>
                            <th scope="col">Email</th>
                            <th scope="col">EmailConfirmed</th>
                            <th scope="col">IsAuthenticated</th>
                            <th scope="col">FirstName</th>
                            <th scope="col">MiddleName</th>
                            <th scope="col">LastName</th>
                            <th scope="col">PhoneNumber</th>
                            <th scope="col">BirthDate</th>
                            <th scope="col">Gender</th>
                            <th scope="col">Nationality</th>
                            <th scope="col">CreateDate</th>
                            <th scope="col">Address</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in UsersList)
                        {
                            <tr @onclick="()=>EditUserInfo(user)">
                                <th scope="row">@user.Id</th>
                                <th>@user.UserName</th>
                                <th>@user.Email</th>
                                <th>@user.EmailConfirmed</th>
                                <th>@user.IsAuthenticated</th>
                                <th>@user.FirstName</th>
                                <th>@user.MiddleName</th>
                                <th>@user.LastName</th>
                                <th>@user.PhoneNumber</th>
                                <th>@user.BirthDate</th>
                                <th>@user.Gender</th>
                                <th>@user.Nationality</th>
                                <th>@user.CreateDate</th>
                                <th>@user.Address</th>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            @if (HttpInfo.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                <p>There is no users</p>
            }
            @if (editUser)
            {

                <input value="@UserInfo.Id" disabled="disabled" />
                <input value="@UserInfo.UserName" disabled="disabled" />
                <input value="@UserInfo.Email" disabled="disabled" />
                <input Value="@UserInfo.FirstName" type="text" />
                <input value="@UserInfo.MiddleName" type="text" />
                <input value="@UserInfo.LastName" type="text" />
                <input value="@UserInfo.PhoneNumber" type="text" />
                <input value="@UserInfo.BirthDate" type="datetime" />
                <input value="@UserInfo.Gender" type="text" />
                <input value="@UserInfo.Nationality" type="text" />
                <input value="@UserInfo.Address" type="text" />


            }


        }

    </Authorized>
    <NotAuthorized>
        <p>You can not access this page </p>
    </NotAuthorized>
</AuthorizeView>

@code {

    private List<UserModle> UsersList = new List<UserModle>();
    private HttpInfoModel HttpInfo = new HttpInfoModel();
    private UserModle UserInfo;
    private bool loading = true;
    private bool editUser = false;


    protected async override Task OnInitializedAsync()
    {
        editUser = false;
        string userToken = await ISessionStorageService.GetItemAsync<string>("Token");

        (UsersList, HttpInfo) = await IUsersDataAccess.GetUsers(userToken);

        loading = false;

    }

    private void EditUserInfo(UserModle userInfo)
    {
        editUser = true;

        UserInfo = userInfo;
    }

}
