@page "/Admin/Feedback"

@using ADHUIServer.Models.Feedback

@inject IFeedbackAccess _IFeedbackAccess
@inject ISessionStorageService _ISessionStorageService

<AuthorizeView Roles="Admin">
    <Authorized>
        <div class="container">
            <div class="row">

                <div class="col">
                    <div class="input-group">
                        <input class="form-control"
                               id="IdInput"
                               @bind-value="@feedback.ReaderId"
                               @bind-value:event="oninput"
                               placeholder="Staff Id"
                               disabled="@DisabledInput" />
                        <div class="input-group-prepend">
                            <button disabled="@DisabledInput"
                                    @onclick="@SearchFeedback"
                                    class="btn btn-outline-primary"
                                    type="button">
                                Check
                            </button>
                        </div>

                        <div class="input-group-prepend">
                            <button disabled="@DisabledInput"
                                    class="btn btn-outline-info"
                                    @onclick="@GetFeedbacks"
                                    type="button">
                                All Feedbacks
                            </button>
                        </div>

                        <div class="input-group-prepend">
                            <button disabled="@DisabledInput"
                                    class="btn btn-outline-info"
                                    @onclick="@GetNotReadedFeedbacks"
                                    type="button">
                                Not Readed Feedbacks
                            </button>
                        </div>
                    </div>
                </div>


            </div>

            @if (feedbackList != null)
            {
                <ADHUIServer.Components.FeedbacksTable Feedbacks="feedbackList" />

            }
            <div class="row">
                @if (Loading)
                {
                    <ADHUIServer.Components.Spinner />
                }
            </div>
        </div>

    </Authorized>

</AuthorizeView>

@code {

    private FeedbackModel feedback = new FeedbackModel();
    private List<FeedbackModel> feedbackList;
    private HttpInfoModel httpInfo = new HttpInfoModel();
    private string token;
    private bool DisabledInput = false;
    private bool Loading = false;

    protected async override Task OnInitializedAsync()
    {
        token = await _ISessionStorageService.GetItemAsync<string>("Token");

    }

    private async void SearchFeedback()
    {
        DisabledInputAndEnabledLoading();
        ClearList();

        (feedbackList, httpInfo) = await _IFeedbackAccess.GetFeedbacksByReaderId_Admin(token, feedback.ReaderId);

        EnabledInputAndDisableLoading();
        StateHasChanged();

    }

    private async void GetFeedbacks()
    {
        DisabledInputAndEnabledLoading();
        ClearList();

        (feedbackList, httpInfo) = await _IFeedbackAccess.GetFeedbacks_Admin(token);

        EnabledInputAndDisableLoading();
        StateHasChanged();
    }

    private async void GetNotReadedFeedbacks()
    {
        DisabledInputAndEnabledLoading();
        ClearList();

        (feedbackList, httpInfo) = await _IFeedbackAccess.GetNotReadedFeedbacks(token);

        EnabledInputAndDisableLoading();
        StateHasChanged();
    }

    private void ClearList()
    {
        feedbackList = null;
        StateHasChanged();
    }

    private void DisabledInputAndEnabledLoading()
    {
        DisabledInput = true;
        Loading = true;

    }

    private void EnabledInputAndDisableLoading()
    {
        DisabledInput = false;
        Loading = false;
    }

}
