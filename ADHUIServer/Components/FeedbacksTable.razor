@using ADHUIServer.Models.Feedback

@*TODD Make each two card in one row to save space : in loop check the / if 0 and ad row else will not *@

@*TODO, Error in get reader information, from the stored procedures*@

@foreach (var item in Feedbacks)
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    @item.Id
                    @if (!item.HasBeenRead)
                    {
                        <span class="badge badge-primary">New</span>
                    }
                </div>
                <div class="card-body">
                    <h3 class="card-title">@item.Titel</h3>
                    <p class="card-text"><span class="font-weight-bold">Name: </span> @item.Name</p>
                    <p class="card-text"><span class="font-weight-bold">Email:</span> @item.Email</p>
                    <p class="card-text"><span class="font-weight-bold">Phone:</span> @item.Phone</p>
                    <p class="card-text"><span class="font-weight-bold">Problem:</span> @item.FeedbackBody</p>
                    <p class="card-text"><span class="font-weight-bold">Date:</span> @item.Date</p>
                    @if (item.HasBeenRead)
                    {
                        <p class="card-text"><span class="font-weight-bold">Checked: </span> Yes</p>
                        <p class="card-text"><span class="font-weight-bold">Checked by: </span>@item.ReaderId</p>
                        <p class="card-text"><span class="font-weight-bold">Name:</span> @item.ReaderFirstName @item.ReaderLastName</p>

                    }
                    else
                    {
                        <p class="card-text"><span class="font-weight-bold">Checked:</span> No</p>
                        <a class="btn btn-outline-warning" @onclick="@(()=>UpdateFeedback.InvokeAsync(item.Id))">Mark as Checked</a>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public List<FeedbackModel> Feedbacks { get; set; }

    [Parameter]
    public EventCallback<string> UpdateFeedback { get; set; }



}
